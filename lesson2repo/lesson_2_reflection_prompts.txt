What happens when you initialize a repository? Why do you need to do it?
You need to log changes to that repository, otherwise it's just a folder.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
The staging area contains all the files you'd like to commit at once, which
may not necessarily be all of the files in your working directory. It helps
to allow bulk action without having to change the working directory and
organize your repository.

How can you use the staging area to make sure you have one commit per logical
change?
By comparing the staging area to working directory and latest commit

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
Branches can help separate different directions code can take or large changes in
functionality, without breaking the original version. It keeps the running version
stable for developers to mess around with other ones.

How do the diagrams help you visualize the branch structure?
The diagrams help track the course of changes and really help me to see
what branches use what code was used at a point in time.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
It combines sets of logical changes into one new complete working codeset. The 
visual shows exactly what commits are being combined to help troubleshoot the
errors.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
Pros are that automatic merging spikes out issues or different code added,
however the cons are that for larger changes it can take forever to sort out
coding changes and produce a working product.
